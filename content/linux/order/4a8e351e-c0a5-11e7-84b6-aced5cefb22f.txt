<div class="post_bd post">
<p>
<strong>grep</strong>（global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。
</p>
<h3>
	选项<br/>
</h3>
<pre>
<strong>-a</strong> 不要忽略二进制数据。
<strong>-A</strong>&lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。
<strong>-b</strong> 在显示符合范本样式的那一行之外，并显示该行之前的内容。
<strong>-c</strong> 计算符合范本样式的列数。
<strong>-C&lt;显示列数&gt;或-&lt;显示列数&gt;</strong>  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。
<strong>-d&lt;进行动作&gt;</strong> 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。
<strong>-e&lt;范本样式&gt;</strong> 指定字符串作为查找文件内容的范本样式。
<strong>-E</strong> 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。
<strong>-f&lt;范本文件&gt;</strong> 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。
<strong>-F</strong> 将范本样式视为固定字符串的列表。
<strong>-G</strong> 将范本样式视为普通的表示法来使用。
<strong>-h</strong> 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。
<strong>-H</strong> 在显示符合范本样式的那一列之前，标示该列的文件名称。
<strong>-i</strong> 胡列字符大小写的差别。
<strong>-l</strong> 列出文件内容符合指定的范本样式的文件名称。
<strong>-L</strong> 列出文件内容不符合指定的范本样式的文件名称。
<strong>-n</strong> 在显示符合范本样式的那一列之前，标示出该列的编号。
<strong>-q</strong> 不显示任何信息。
<strong>-R/-r </strong>此参数的效果和指定“-d recurse”参数相同。
<strong>-s</strong> 不显示错误信息。
<strong>-v</strong> 反转查找。
<strong>-<span class="wp_keywordlink"><a href="http://man.linuxde.net/w" target="_blank" title="w命令">w</a></span></strong> 只显示全字符合的列。
<strong>-x</strong> 只显示全列符合的列。
<strong>-y</strong> 此参数效果跟“-i”相同。
<strong>-o</strong> 只输出文件中匹配到的部分。</pre>
<h2>
	grep命令常见用法<br/>
</h2>
<p>
	在文件中搜索一个单词，命令会返回一个包含<strong>“match_pattern”</strong>的文本行：
</p>
<pre>
grep<span style="color:#f00;"> match_pattern</span> file_name
grep <span style="color:#f00;">"match_pattern"</span> file_name
</pre>
<p>
	在多个文件中查找：
</p>
<pre>
grep "match_pattern" file_1 file_2 file_3 ...
</pre>
<p>
	输出除之外的所有行 <strong>-v </strong>选项：
</p>
<pre>
grep <span style="color:#f00;">-v</span> "match_pattern" file_name
</pre>
<p>
	标记匹配颜色 <strong>--color=auto</strong> 选项：
</p>
<pre>
grep "match_pattern" file_name <span style="color:#f00;">--color=auto</span>
</pre>
<p>
	使用正则表达式 <strong>-E</strong> 选项：
</p>
<pre>
grep <span style="color:#f00;">-E</span> "[1-9]+"
或
<span style="color:#f00;"><span class="wp_keywordlink"><a href="http://man.linuxde.net/egrep" target="_blank" title="egrep命令">egrep</a></span></span> "[1-9]+"
</pre>
<p>
	只输出文件中匹配到的部分 <strong>-o </strong>选项：
</p>
<pre>
<span class="wp_keywordlink"><a href="http://man.linuxde.net/echo" target="_blank" title="echo命令">echo</a></span> this is a <span class="wp_keywordlink"><a href="http://man.linuxde.net/test" target="_blank" title="test命令">test</a></span> line. | grep <span style="color:#f00;">-o</span> -E "[a-z]+\."
line.

echo this is a test line. | <span style="color:#f00;">egrep -o</span> "[a-z]+\."
line.
</pre>
<p>
	统计文件或者文本中包含匹配字符串的行数 <strong>-c</strong> 选项：
</p>
<pre>
grep <span style="color:#f00;">-c</span> "text" file_name
</pre>
<p>
	输出包含匹配字符串的行数 <strong>-n </strong>选项：
</p>
<pre>
grep "text" <span style="color:#f00;">-n</span> file_name
或
<span class="wp_keywordlink"><a href="http://man.linuxde.net/cat" target="_blank" title="cat命令">cat</a></span> file_name | grep "text" -n

<span style="color:#008000;">#多个文件</span>
grep "text" -n file_1 file_2
</pre>
<p>
	打印样式匹配所位于的字符或字节偏移：
</p>
<pre>
echo gun is not unix | grep -b -o "not"
7:not

<span style="color:#008000;">#一行中字符串的字符便宜是从该行的第一个字符开始计算，起始值为0。选项 <span style="color:#f00;"><strong>-b -o</strong></span> 一般总是配合使用。</span>
</pre>
<p>
	搜索多个文件并查找匹配文本在哪些文件中：
</p>
<pre>
grep -l "text" file1 file2 file3...
</pre>
<h3>
	grep递归搜索文件<br/>
</h3>
<p>
	在多级目录中对文本进行递归搜索：
</p>
<pre>
grep "text" . -r -n
<span style="color:#008000;"># .表示当前目录。</span>
</pre>
<p>
	忽略匹配样式中的字符大小写：
</p>
<pre>
echo "hello world" | grep <span style="color:#f00;">-i</span> "HELLO"
hello
</pre>
<p>
	选项<strong> -e</strong> 制动多个匹配样式：
</p>
<pre>
echo this is a text line | grep <span style="color:#f00;">-e</span> "is" <span style="color:#f00;">-e</span> "line" -o
is
line

<span style="color:#008000;">#也可以使用<strong>-f</strong>选项来匹配多个样式，在样式文件中逐行写出需要匹配的字符。</span>
cat patfile
aaa
bbb

echo aaa bbb ccc ddd eee | grep <span style="color:#f00;">-f</span> patfile -o
</pre>
<p>
	在grep搜索结果中包括或者排除指定文件：
</p>
<pre>
<span style="color:#008000;">#只在目录中所有的.<span class="wp_keywordlink"><a href="http://man.linuxde.net/php" target="_blank" title="php命令">php</a></span>和.html文件中递归搜索字符"main()"</span>
grep "main()" . -r <span style="color:#f00;">--include</span> *.{php,html}

<span style="color:#008000;">#在搜索结果中排除所有README文件</span>
grep "main()" . -r <span style="color:#f00;">--exclude</span> "README"

<span style="color:#008000;">#在搜索结果中排除filelist文件列表里的文件</span>
grep "main()" . -r <span style="color:#f00;">--exclude-from</span> filelist
</pre>
<p>
	使用0值字节后缀的grep与<span class="wp_keywordlink"><a href="http://man.linuxde.net/xargs" target="_blank" title="xargs命令">xargs</a></span>：
</p>
<pre>
<span style="color:#008000;">#测试文件：</span>
echo "aaa" &gt; file1
echo "bbb" &gt; file2
echo "aaa" &gt; file3

grep "aaa" <span class="wp_keywordlink"><a href="http://man.linuxde.net/file" target="_blank" title="file命令">file</a></span>* <span style="color:#f00;">-lZ</span> | xargs -0 <span class="wp_keywordlink"><a href="http://man.linuxde.net/rm" target="_blank" title="rm命令">rm</a></span>

<span style="color:#008000;">#执行后会删除file1和file3，grep输出用-Z选项来指定以0值字节作为终结符文件名（\0），xargs -0 读取输入并用0值字节终结符分隔文件名，然后删除匹配文件，-Z通常和-l结合使用。</span>
</pre>
<p>
	grep静默输出：
</p>
<pre>
grep <span style="color:#f00;">-q</span> "test" filename

<span style="color:#008000;">#不会输出任何信息，如果命令运行成功返回0，失败则返回非0值。一般用于条件测试。</span>
</pre>
<p>
	打印出匹配文本之前或者之后的行：
</p>
<pre>
<span style="color:#008000;">#显示匹配某个结果之后的3行，使用 -A 选项：</span>
<span class="wp_keywordlink"><a href="http://man.linuxde.net/seq" target="_blank" title="seq命令">seq</a></span> 10 | grep "5" <span style="color:#f00;">-A</span> 3
5
6
7
8

<span style="color:#008000;">#显示匹配某个结果之前的3行，使用 -B 选项：</span>
seq 10 | grep "5" <span style="color:#f00;">-B</span> 3
2
3
4
5

<span style="color:#008000;">#显示匹配某个结果的前三行和后三行，使用 -C 选项：</span>
seq 10 | grep "5" <span style="color:#f00;">-C</span> 3
2
3
4
5
6
7
8

<span style="color:#008000;">#如果匹配结果有多个，会用“--”作为各匹配结果之间的分隔符：</span>
echo -e "a\nb\<span class="wp_keywordlink"><a href="http://man.linuxde.net/nc_netcat" target="_blank" title="nc命令">nc</a></span>\na\nb\nc" | grep a -A 1
a
b
--
a
b</pre>
</div>