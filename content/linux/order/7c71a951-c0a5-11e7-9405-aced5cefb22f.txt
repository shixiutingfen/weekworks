<div class="post_bd post">
<div class="content-index" id="content-index" style="float:right;"><div class="content-index-title">本文索引</div><span class="content-index-toctoggle">[<a href="javascript:content_index_toggleToc()" id="content-index-togglelink">隐藏</a>]</span>
<script language="javascript" type="text/javascript">
window.content_index_showTocToggle=true;function content_index_toggleToc(){var tts="显示";var tth="隐藏";if(window.content_index_showTocToggle){window.content_index_showTocToggle=false;document.getElementById("content-index-contents").style.display="none";document.getElementById("content-index-togglelink").innerHTML=tts}else{window.content_index_showTocToggle=true;document.getElementById("content-index-contents").style.display="block";document.getElementById("content-index-togglelink").innerHTML=tth}}
</script>
<ul id="content-index-contents"><li class="content-index-level-1"><a href="http://man.linuxde.net/sed#sed的选项、命令、替换标记" title="sed的选项、命令、替换标记"><span>sed的选项、命令、替换标记</span></a><ul class="children"><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#选项" title="选项"><span>选项</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#参数" title="参数"><span>参数</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#sed命令" title="sed命令"><span>sed命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#sed替换标记" title="sed替换标记"><span>sed替换标记</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#sed元字符集" title="sed元字符集"><span>sed元字符集</span></a></li></ul></li><li class="content-index-level-1"><a href="http://man.linuxde.net/sed#sed用法实例" title="sed用法实例"><span>sed用法实例</span></a><ul class="children"><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#替换操作：s命令" title="替换操作：s命令"><span>替换操作：s命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#全面替换标记g" title="全面替换标记g"><span>全面替换标记g</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#定界符" title="定界符"><span>定界符</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#删除操作：d命令" title="删除操作：d命令"><span>删除操作：d命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#已匹配字符串标记&amp;" title="已匹配字符串标记&amp;"><span>已匹配字符串标记&amp;</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#子串匹配标记\1" title="子串匹配标记\1"><span>子串匹配标记\1</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#组合多个表达式" title="组合多个表达式"><span>组合多个表达式</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#引用" title="引用"><span>引用</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#选定行的范围：,（逗号）" title="选定行的范围：,（逗号）"><span>选定行的范围：,（逗号）</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#多点编辑：e命令" title="多点编辑：e命令"><span>多点编辑：e命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#从文件读入：r命令" title="从文件读入：r命令"><span>从文件读入：r命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#写入文件：w命令  " title="写入文件：w命令  "><span>写入文件：w命令  </span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#追加（行下）：a\命令" title="追加（行下）：a\命令"><span>追加（行下）：a\命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#插入（行上）：i\命令" title="插入（行上）：i\命令"><span>插入（行上）：i\命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#下一个：n命令" title="下一个：n命令"><span>下一个：n命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#变形：y命令" title="变形：y命令"><span>变形：y命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#退出：q命令" title="退出：q命令"><span>退出：q命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#保持和获取：h命令和G命令" title="保持和获取：h命令和G命令"><span>保持和获取：h命令和G命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#保持和互换：h命令和x命令" title="保持和互换：h命令和x命令"><span>保持和互换：h命令和x命令</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#脚本scriptfile" title="脚本scriptfile"><span>脚本scriptfile</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#打印奇数行或偶数行" title="打印奇数行或偶数行"><span>打印奇数行或偶数行</span></a></li><li class="content-index-level-2"><a href="http://man.linuxde.net/sed#打印匹配字符串的下一行" title="打印匹配字符串的下一行"><span>打印匹配字符串的下一行</span></a></li></ul></li></ul></div>
<p>
<strong>sed</strong>是一种流编辑器，它是文本处理中非常中的工具，能够完美的配合正则表达式使用，功能不同凡响。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。
</p>
<h2 id="sed的选项、命令、替换标记">
	sed的选项、命令、替换标记<br/>
</h2>
<p>
<strong>命令格式</strong>
</p>
<pre>
sed [options] '<span class="wp_keywordlink"><a href="http://man.linuxde.net/command" target="_blank" title="command命令">command</a></span>' <span class="wp_keywordlink"><a href="http://man.linuxde.net/file" target="_blank" title="file命令">file</a></span>(s)
sed [options] -f scriptfile file(s)</pre>
<h3 id="选项">
	选项<br/>
</h3>
<pre>
-e&lt;script&gt;或--expression=&lt;script&gt;：以选项中的指定的script来处理输入的文本文件；
-f&lt;script文件&gt;或--file=&lt;script文件&gt;：以选项中指定的script文件来处理输入的文本文件；
-h或--<span class="wp_keywordlink"><a href="http://man.linuxde.net/help" target="_blank" title="help命令">help</a></span>：显示帮助；
-n或--quiet或——silent：仅显示script处理后的结果；
-V或--version：显示版本信息。</pre>
<h3 id="参数">
	参数<br/>
</h3>
<p>
	文件：指定待处理的文本文件列表。
</p>
<h3 id="sed命令">
	sed命令<br/>
</h3>
<pre>
<strong>a\ </strong>在当前行下面插入文本。
<strong>i\ </strong>在当前行上面插入文本。
<strong>c\ </strong>把选定的行改为新的文本。
<strong>d </strong>删除，删除选择的行。
<strong>D</strong> 删除模板块的第一行。
<strong>s</strong> 替换指定字符
<strong>h </strong>拷贝模板块的内容到内存中的缓冲区。
<strong>H</strong> 追加模板块的内容到内存中的缓冲区。
<strong>g</strong> 获得内存缓冲区的内容，并替代当前模板块中的文本。
<strong>G</strong> 获得内存缓冲区的内容，并追加到当前模板块文本的后面。
<strong>l</strong> 列表不能打印字符的清单。
<strong>n </strong>读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。
<strong>N </strong>追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。
<strong>p </strong>打印模板块的行。
<strong>P</strong>(大写) 打印模板块的第一行。
<strong>q </strong>退出Sed。
<strong>b lable </strong>分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。
<strong>r file </strong>从file中读行。
<strong>t label </strong>if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。
<strong>T label </strong>错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。
<strong><span class="wp_keywordlink"><a href="http://man.linuxde.net/w" target="_blank" title="w命令">w</a></span> file </strong>写并追加模板块到file末尾。  
<strong>W file </strong>写并追加模板块的第一行到file末尾。  
<strong>! </strong>表示后面的命令对所有没有被选定的行发生作用。  
<strong>= </strong>打印当前行号码。  
<strong>#</strong> 把注释扩展到下一个换行符以前。  </pre>
<h3 id="sed替换标记">
	sed替换标记<br/>
</h3>
<pre>
<strong>g </strong>表示行内全面替换。  
<strong>p </strong>表示打印行。  
<strong>w</strong> 表示把行写入一个文件。  
<strong>x </strong>表示互换模板块中的文本和缓冲区中的文本。  
<strong>y </strong>表示把一个字符翻译为另外的字符（但是不用于正则表达式）
<strong>\1 </strong>子串匹配标记
<strong>&amp; </strong>已匹配字符串标记</pre>
<h3 id="sed元字符集">
	sed元字符集<br/>
</h3>
<pre>
<strong>^ </strong>匹配行开始，如：/^sed/匹配所有以sed开头的行。
<strong>$</strong> 匹配行结束，如：/sed$/匹配所有以sed结尾的行。
<strong>. </strong>匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。
<strong>* </strong>匹配0个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。
<strong>[] </strong>匹配一个指定范围内的字符，如/[<span class="wp_keywordlink"><a href="http://man.linuxde.net/ss" target="_blank" title="ss命令">ss</a></span>]<span class="wp_keywordlink"><a href="http://man.linuxde.net/ed" target="_blank" title="ed命令">ed</a></span>/匹配sed和Sed。  
<strong>[^] </strong>匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。
<strong>\(..\) </strong>匹配子串，保存匹配的字符，如s/\(love\)able/\1rs，loveable被替换成lovers。
<strong>&amp; </strong>保存搜索字符用来替换其他字符，如s/love/**&amp;**/，love这成**love**。
<strong>\&lt; </strong>匹配单词的开始，如:/\&lt;love/匹配包含以love开头的单词的行。
<strong>\&gt; </strong>匹配单词的结束，如/love\&gt;/匹配包含以love结尾的单词的行。
<strong>x\{m\} </strong>重复字符x，m次，如：/0\{5\}/匹配包含5个0的行。
<strong>x\{m,\} </strong>重复字符x，至少m次，如：/0\{5,\}/匹配至少有5个0的行。
<strong>x\{m,n\} </strong>重复字符x，至少m次，不多于n次，如：/0\{5,10\}/匹配5~10个0的行。<span id="cke_bm_209E" style="display: none;"> </span></pre>
<h2 id="sed用法实例">
	sed用法实例<br/>
</h2>
<h3 id="替换操作：s命令">
	替换操作：s命令<br/>
</h3>
<p>
	替换文本中的字符串：
</p>
<pre>
sed '<span style="color:#f00;">s</span>/book/books/' file</pre>
<p>
<strong>-n选项</strong>和<strong>p命令</strong>一起使用表示只打印那些发生替换的行：
</p>
<p>
	sed <span style="color:#f00;">-n</span> 's/<span class="wp_keywordlink"><a href="http://man.linuxde.net/test" target="_blank" title="test命令">test</a></span>/TEST/<span style="color:#f00;">p</span>' file
</p>
<p>
	直接编辑文件<strong>选项-i</strong>，会匹配file文件中每一行的第一个book替换为books：
</p>
<pre>
sed <span style="color:#f00;">-i</span> 's/book/books/g' file</pre>
<h3 id="全面替换标记g">
	全面替换标记g<br/>
</h3>
<p>
	使用后缀 /g 标记会替换每一行中的所有匹配：
</p>
<pre>
sed 's/book/books/<span style="color:#f00;">g</span>' file</pre>
<p>
	当需要从第N处匹配开始替换时，可以使用 /Ng：
</p>
<pre>
<span class="wp_keywordlink"><a href="http://man.linuxde.net/echo" target="_blank" title="echo命令">echo</a></span> sksksksksksk | sed 's/sk/SK/<span style="color:#f00;">2g</span>'
skSKSKSKSKSK

echo sksksksksksk | sed 's/sk/SK/<span style="color:#f00;">3g</span>'
skskSKSKSKSK

echo sksksksksksk | sed 's/sk/SK/<span style="color:#f00;">4g</span>'
skskskSKSKSK</pre>
<h3 id="定界符">
	定界符<br/>
</h3>
<p>
	以上命令中字符 / 在sed中作为定界符使用，也可以使用任意的定界符：
</p>
<pre>
sed 's:test:TEXT:g'
sed 's|test|TEXT|g'</pre>
<p>
	定界符出现在样式内部时，需要进行转义：
</p>
<pre>
sed 's/\/bin/\/usr\/local\/bin/g'</pre>
<h3 id="删除操作：d命令">
	删除操作：d命令<br/>
</h3>
<p>
	删除空白行：
</p>
<pre>
sed '<span style="color:#f00;">/^$/d</span>' file</pre>
<p>
	删除文件的第2行：
</p>
<pre>
sed '<span style="color:#f00;">2d</span>' file</pre>
<p>
	删除文件的第2行到末尾所有行：
</p>
<pre>
sed '<span style="color:#f00;">2,$d</span>' file</pre>
<p>
	删除文件最后一行：
</p>
<pre>
sed '<span style="color:#f00;">$d</span>' file</pre>
<p>
	删除文件中所有开头是test的行：
</p>
<pre>
sed '/<span style="color:#f00;">^test</span>/'<span style="color:#f00;">d</span> file</pre>
<h3 id="已匹配字符串标记&amp;">
	已匹配字符串标记&amp;<br/>
</h3>
<p>
	正则表达式 \w\+ 匹配每一个单词，使用 [&amp;] 替换它，&amp; 对应于之前所匹配到的单词：
</p>
<pre>
echo this is a test line | sed 's/\w\+/[<span style="color:#f00;">&amp;</span>]/g'
[this] [is] [a] [test] [line]</pre>
<p>
	所有以192.168.0.1开头的行都会被替换成它自已加localhost：
</p>
<pre>
sed 's/^192.168.0.1/<span style="color:#f00;">&amp;</span>localhost/' file
192.168.0.1localhost</pre>
<h3 id="子串匹配标记&lt;h3">
	子串匹配标记\1<br/>
</h3>
<p>
	匹配给定样式的其中一部分：
</p>
<pre>
echo this is digit 7 in a number | sed 's/digit \([0-9]\)/<span style="color:#f00;">\1</span>/'
this is 7 in a number</pre>
<p>
	命令中 digit 7，被替换成了 7。样式匹配到的子串是 7，\(..\) 用于匹配子串，对于匹配到的第一个子串就标记为 <strong>\1</strong>，依此类推匹配到的第二个结果就是 <strong>\2</strong>，例如：
</p>
<pre>
echo aaa BBB | sed 's/\([a-z]\+\) \([A-Z]\+\)/<span style="color:#f00;">\2</span> <span style="color:#f00;">\1</span>/'
BBB aaa</pre>
<p>
	love被标记为1，所有loveable会被替换成lovers，并打印出来：
</p>
<pre>
sed -n 's/\(love\)able/<span style="color:#f00;">\1</span>rs/p' file</pre>
<h3 id="组合多个表达式">
	组合多个表达式<br/>
</h3>
<pre>
sed '表达式' | sed '表达式'

等价于：

sed '表达式<span style="color:#f00;">;</span> 表达式'</pre>
<h3 id="引用">
	引用<br/>
</h3>
<p>
	sed表达式可以使用单引号来引用，但是如果表达式内部包含变量字符串，就需要使用双引号。
</p>
<pre>
test=hello
echo hello WORLD | sed <span style="color:#f00;">"</span>s/$test/HELLO<span style="color:#f00;">"</span>
HELLO WORLD</pre>
<h3 id="选定行的范围：,（逗号）">
	选定行的范围：,（逗号）<br/>
</h3>
<p>
	所有在模板test和check所确定的范围内的行都被打印：
</p>
<pre>
sed -n '/test/<span style="color:#f00;">,</span>/check/p' file</pre>
<p>
	打印从第5行开始到第一个包含以test开始的行之间的所有行：
</p>
<pre>
sed -n '5<span style="color:#f00;">,</span>/^test/p' file</pre>
<p>
	对于模板test和west之间的行，每行的末尾用字符串aaa bbb替换：
</p>
<pre>
sed '/test/<span style="color:#f00;">,</span>/west/s/$/aaa bbb/' file</pre>
<h3 id="多点编辑：e命令">
	多点编辑：e命令<br/>
</h3>
<p>
	-e选项允许在同一行里执行多条命令：
</p>
<pre>
sed <span style="color:#f00;">-e</span> '1,5d' <span style="color:#f00;">-e</span> 's/test/check/' file</pre>
<p>
	上面sed表达式的第一条命令删除1至5行，第二条命令用check替换test。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。
</p>
<p>
	和 -e 等价的命令是 --expression：
</p>
<pre>
sed <span style="color:#f00;">--expression=</span>'s/test/check/' <span style="color:#f00;">--expression=</span>'/love/d' file</pre>
<h3 id="从文件读入：r命令">
	从文件读入：r命令<br/>
</h3>
<p>
	file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：
</p>
<pre>
sed '/test/<span style="color:#f00;">r</span> file' filename</pre>
<h3 id="写入文件：w命令  ">
	写入文件：w命令  <br/>
</h3>
<p>
	在example中所有包含test的行都被写入file里：
</p>
<pre>
sed -n '/test/<span style="color:#f00;">w</span> file' example</pre>
<h3 id="追加（行下）：a\命令">
	追加（行下）：a\命令<br/>
</h3>
<p>
	将 this is a test line 追加到 以test 开头的行后面：
</p>
<pre>
sed '/^test/<span style="color:#f00;">a\</span>this is a test line' file</pre>
<p>
	在 test.conf 文件第2行之后插入 this is a test line：
</p>
<pre>
sed -i '2<span style="color:#f00;">a\</span>this is a test line' test.conf</pre>
<h3 id="插入（行上）：i\命令">
	插入（行上）：i\命令<br/>
</h3>
<p>
	将 this is a test line 追加到以test开头的行前面：
</p>
<pre>
sed '/^test/<span style="color:#f00;">i\</span>this is a test line' file</pre>
<p>
	在test.conf文件第5行之前插入this is a test line：
</p>
<pre>
sed -i '5<span style="color:#f00;">i\</span>this is a test line' test.conf</pre>
<h3 id="下一个：n命令">
	下一个：n命令<br/>
</h3>
<p>
	如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续：
</p>
<pre>
sed '/test/{ <span style="color:#f00;">n</span>; s/aa/bb/; }' file</pre>
<h3 id="变形：y命令">
	变形：y命令<br/>
</h3>
<p>
	把1~10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令：
</p>
<pre>
sed '1,10<span style="color:#f00;">y</span>/abcde/ABCDE/' file</pre>
<h3 id="退出：q命令">
	退出：q命令<br/>
</h3>
<p>
	打印完第10行后，退出sed
</p>
<pre>
sed '10<span style="color:#f00;">q</span>' file</pre>
<h3 id="保持和获取：h命令和G命令">
	保持和获取：h命令和G命令<br/>
</h3>
<p>
	在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。
</p>
<pre>
sed -e '/test/<span style="color:#f00;">h</span>' -e '<span style="color:#f00;">$G</span>' file</pre>
<p>
	在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。
</p>
<h3 id="保持和互换：h命令和x命令">
	保持和互换：h命令和x命令<br/>
</h3>
<p>
	互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换：
</p>
<pre>
sed -e '/test/<span style="color:#f00;">h</span>' -e '/check/<span style="color:#f00;">x</span>' file</pre>
<h3 id="脚本scriptfile">
	脚本scriptfile<br/>
</h3>
<p>
	sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。
</p>
<pre>
sed [options] <span style="color:#f00;">-f scriptfile</span> file(s)</pre>
<h3 id="打印奇数行或偶数行">
	打印奇数行或偶数行<br/>
</h3>
<p>
	方法1：
</p>
<pre>
sed -n '<span style="color:#f00;">p;n</span>' test.txt  #奇数行
sed -n '<span style="color:#f00;">n;p</span>' test.txt  #偶数行
</pre>
<p>
	方法2：
</p>
<pre>
sed -n '<span style="color:#f00;">1~2p</span>' test.txt  #奇数行
sed -n '<span style="color:#f00;">2~2p</span>' test.txt  #偶数行
</pre>
<h3 id="打印匹配字符串的下一行">
	打印匹配字符串的下一行<br/>
</h3>
<pre>
<span class="wp_keywordlink"><a href="http://man.linuxde.net/grep" target="_blank" title="grep命令">grep</a></span> -A 1 SCC URFILE
sed -n '/SCC/{n;p}' URFILE
<span class="wp_keywordlink"><a href="http://man.linuxde.net/awk" target="_blank" title="awk命令">awk</a></span> '/SCC/{getline; print}' URFILE
</pre>
</div>